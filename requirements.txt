# requirements.txt
# QuickMedCalc has no external dependencies!
# All required modules are part of Python's standard library:
# - tkinter (GUI)
# - sqlite3 (database)
# - math (calculations)
# - datetime (timestamps)
# - os (file operations)
# - json (data handling)

# Optional development dependencies:
# pyinstaller>=5.0  # For creating executables
# pytest>=7.0       # For testing (future use)

---FILE_SEPARATOR--- .gitignore
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# QuickMedCalc specific files
quickmed_data.db
quickmed_data.db-journal
*.db
*.db-journal

# IDE files
.vscode/
.idea/
*.swp
*.swo

# OS files
.DS_Store
Thumbs.db

---FILE_SEPARATOR--- CHANGELOG.md
# Changelog

All notable changes to QuickMedCalc will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [1.0.0] - 2025-01-XX

### Added
- Initial release of QuickMedCalc
- Core medical calculators:
  - BMI Calculator with WHO categories
  - Body Surface Area (Mosteller formula)
  - Creatinine Clearance (Cockcroft-Gault)
  - Glasgow Coma Scale with interpretations
  - Wells Score for DVT risk
  - APGAR Score for newborns
  - Pediatric weight-based dosing
  - CHADSâ‚‚ Score for stroke risk
- Quick search functionality
- Patient notes system
- SQLite database for calculation history
- Offline operation capability
- Cross-platform compatibility
- Medical disclaimers and safety warnings

### Medical Validations
- All formulas verified against current medical literature
- Clinical interpretations aligned with standard guidelines
- Edge case handling for invalid inputs

## [Unreleased]

### Planned for v2.0
- [ ] Drug interaction checker
- [ ] Additional scoring systems (APACHE, SOFA)
- [ ] Mobile application version
- [ ] Cloud synchronization (optional)
- [ ] Multi-language support
- [ ] Export functionality for calculations

### Under Consideration
- [ ] Pediatric growth charts
- [ ] Cardiac risk calculators  
- [ ] Laboratory value interpretations
- [ ] Clinical pathway integration

---FILE_SEPARATOR--- setup.py
#!/usr/bin/env python3
"""
Setup script for QuickMedCalc
Clinical Calculator & Decision Aid Tool
"""

from setuptools import setup, find_packages
import os

# Read the README file for long description
with open("README.md", "r", encoding="utf-8") as fh:
    long_description = fh.read()

# Read requirements
def read_requirements():
    """Read requirements from requirements.txt if it exists"""
    requirements_path = os.path.join(os.path.dirname(__file__), 'requirements.txt')
    if os.path.exists(requirements_path):
        with open(requirements_path, 'r') as f:
            # Filter out comments and empty lines
            return [line.strip() for line in f if line.strip() and not line.startswith('#')]
    return []

setup(
    name="quickmed-calc",
    version="1.0.0",
    author="Medical Professional Contributors",
    author_email="",  # Add your email
    description="A comprehensive clinical calculator and decision aid tool for medical professionals",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/yourusername/QuickMedCalc",
    packages=find_packages(),
    classifiers=[
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Healthcare Industry",
        "Topic :: Scientific/Engineering :: Medical Science Apps.",
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Operating System :: OS Independent",
        "Environment :: X11 Applications :: Qt",
        "Natural Language :: English",
    ],
    python_requires=">=3.7",
    install_requires=read_requirements(),
    extras_require={
        "dev": [
            "pytest>=7.0",
            "pytest-cov",
            "black",
            "flake8",
        ],
        "build": [
            "pyinstaller>=5.0",
            "auto-py-to-exe",
        ],
    },
    entry_points={
        "console_scripts": [
            "quickmed-calc=src.main:main",
        ],
    },
    include_package_data=True,
    zip_safe=False,
    keywords="medical calculator clinical healthcare bmr gcs wells score apgar",
    project_urls={
        "Bug Reports": "https://github.com/yourusername/QuickMedCalc/issues",
        "Source": "https://github.com/yourusername/QuickMedCalc",
        "Documentation": "https://github.com/yourusername/QuickMedCalc#readme",
    },
)